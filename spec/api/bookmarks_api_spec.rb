=begin
#Pathfinder

#Core application for storage and analysis of IT landscape data

The version of the OpenAPI document: 5.0.1100

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixApi::BookmarksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BookmarksApi' do
  before do
    # run before each test
    @api_instance = LeanixApi::BookmarksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BookmarksApi' do
    it 'should create an instance of BookmarksApi' do
      expect(@api_instance).to be_instance_of(LeanixApi::BookmarksApi)
    end
  end

  # unit tests for create_bookmark
  # createBookmark
  # Saves a bookmark in the database
  # @param [Hash] opts the optional parameters
  # @option opts [Bookmark] :body bookmark
  # @return [BookmarkResponse]
  describe 'create_bookmark test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_bookmark
  # deleteBookmark
  # Deletes a bookmark identified by the given ID
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_bookmark test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_working_copy
  # deleteWorkingCopy
  # Deletes a working copy for a bookmark stored in the database
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [BookmarkResponse]
  describe 'delete_working_copy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_bookmark
  # getBookmark
  # Retrieves a bookmark by ID
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :mark_as_viewed 
  # @return [BookmarkResponse]
  describe 'get_bookmark test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_bookmarks
  # getBookmarks
  # Retrieves all stored bookmarks a user can read.
  # @param bookmark_type Specifies the bookmark type
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :o_data_only Filter for OData bookmarks
  # @option opts [String] :group_key A key used to separate bookmarks within the same query type
  # @return [BookmarkListResponse]
  describe 'get_bookmarks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_bookmark
  # updateBookmark
  # Updates a bookmark stored in the database
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [Bookmark] :body bookmark
  # @return [BookmarkResponse]
  describe 'update_bookmark test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_working_copy
  # updateWorkingCopy
  # Updates a working copy for a bookmark stored in the database
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [BookmarkWorkingCopy] :body workingCopy
  # @return [BookmarkResponse]
  describe 'update_working_copy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
