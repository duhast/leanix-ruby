=begin
#Pathfinder

#Core application for storage and analysis of IT landscape data

The version of the OpenAPI document: 5.0.1100

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixApi::FactSheetsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FactSheetsApi' do
  before do
    # run before each test
    @api_instance = LeanixApi::FactSheetsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FactSheetsApi' do
    it 'should create an instance of FactSheetsApi' do
      expect(@api_instance).to be_instance_of(LeanixApi::FactSheetsApi)
    end
  end

  # unit tests for archive_fact_sheet
  # archiveFactSheet
  # Archives a Fact Sheet
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [FactSheetArchiveParameter] :body Contains the comment and the Fact Sheet revision
  # @return [nil]
  describe 'archive_fact_sheet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_fact_sheet
  # createFactSheet
  # Creates a Fact Sheet
  # @param body Fact Sheet to add
  # @param [Hash] opts the optional parameters
  # @return [FactSheetResponse]
  describe 'create_fact_sheet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_fact_sheet_relation
  # createFactSheetRelation
  # Creates the given relation with the Fact Sheet as one side of the relation. When adding constraining relations only the ID of these relations will be used.
  # @param id 
  # @param relation 
  # @param [Hash] opts the optional parameters
  # @return [RelationResponse]
  describe 'create_fact_sheet_relation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_fact_sheet_relation
  # deleteFactSheetRelation
  # Deletes the given relation.
  # @param id 
  # @param relation_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_fact_sheet_relation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_fact_sheet
  # getFactSheet
  # Retrieves a Fact Sheet
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :relation_types Comma separated list of relation types to show on the Fact Sheets
  # @option opts [Boolean] :permissions Show a permission field for the Fact Sheet
  # @return [FactSheetResponse]
  describe 'get_fact_sheet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_fact_sheet_hierarchy
  # getFactSheetHierarchy
  # Retrieves a list of all Fact Sheets equal to or below a certain root Fact Sheet
  # @param root_id 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page_size Number of Fact Sheets to return, maximum is 5000
  # @option opts [String] :cursor Marks the position of the first element that should be returned
  # @return [FactSheetListResponse]
  describe 'get_fact_sheet_hierarchy test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_fact_sheet_relations
  # getFactSheetRelations
  # Retrieves all relations of a Fact Sheet, with the given type
  # @param id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Only return relations of this type
  # @option opts [Boolean] :with_fact_sheets Include the to Fact Sheet in the relation
  # @return [RelationListResponse]
  describe 'get_fact_sheet_relations test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_fact_sheets
  # getFactSheets
  # Retrieves all Fact Sheets
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type Comma separated list of Fact Sheets types to list, leave empty for all
  # @option opts [String] :relation_types Comma separated list of relation types to show on the Fact Sheets
  # @option opts [String] :fields Comma separated list of fields to show on the Fact Sheets, leave empty for all
  # @option opts [Boolean] :archived_only Retrieve archived fact sheets instead of active ones
  # @option opts [Integer] :page_size Number of Fact Sheets to return, maximum is 5000
  # @option opts [String] :cursor Marks the position of the first element that should be returned
  # @option opts [Boolean] :permissions Show a permission field for the Fact Sheet
  # @option opts [Boolean] :completion Show completion status for the Fact Sheet
  # @option opts [Boolean] :documents Include documents of the Fact Sheet
  # @option opts [Boolean] :tags Include tags of the Fact Sheet
  # @option opts [Boolean] :subscriptions Include subscriptions of the Fact Sheet
  # @option opts [Boolean] :constraining_relations Include constraining relations of the relations of the Fact Sheet
  # @return [FactSheetListResponse]
  describe 'get_fact_sheets test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_fact_sheet
  # updateFactSheet
  # Deprecated. Please use the GraphQL API: Do a mutation operation containing the updateFactSheet field.
  # @param id 
  # @param body Fact Sheet to update
  # @param [Hash] opts the optional parameters
  # @option opts [String] :relation_types Comma separated list of relation types to update. If no types are set, the relations will not be changed.
  # @return [FactSheetResponse]
  describe 'update_fact_sheet test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_fact_sheet_relation
  # updateFactSheetRelation
  # Updates the given relation.
  # @param id 
  # @param relation_id 
  # @param relation 
  # @param [Hash] opts the optional parameters
  # @return [RelationResponse]
  describe 'update_fact_sheet_relation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
