=begin
#Pathfinder

#Core application for storage and analysis of IT landscape data

The version of the OpenAPI document: 5.0.1100

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for LeanixApi::ExportsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ExportsApi' do
  before do
    # run before each test
    @api_instance = LeanixApi::ExportsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ExportsApi' do
    it 'should create an instance of ExportsApi' do
      expect(@api_instance).to be_instance_of(LeanixApi::ExportsApi)
    end
  end

  # unit tests for create_export_file
  # createExportFile
  # DEPRECATED: Use https://&lt;your-instance&gt;.leanix.net/services/import-export/v1/exports instead.
  # @param [Hash] opts the optional parameters
  # @return [JobResponse]
  describe 'create_export_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_full_export
  # createFullExport
  # Creates a full export of the workspace data, or an export of the changelog, depending on given type
  # @param [Hash] opts the optional parameters
  # @option opts [String] :export_type The type of the export, must be either SNAPSHOT, AUDIT_LOG or AUDIT_LOG_LEGACY
  # @option opts [String] :start_date The start date of the audit log export in ISO-8601 format.
  # @option opts [String] :end_date The end date of the audit log export in ISO-8601 format. If left empty today is assumed
  # @return [JobResponse]
  describe 'create_full_export test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for download_export_file
  # downloadExportFile
  # @param workspace_id the ID of the workspace to retrieve the download for
  # @param key a one time use key identifying the download to retrieve
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'download_export_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_exports
  # getExports
  # Lists all exports of the given type in the workspace of the authorized user
  # @param [Hash] opts the optional parameters
  # @option opts [String] :export_type Comma separated list of types of exports to return, if left empty AUDIT_LOG and SNAPSHOT, and AUDIT_LOG_LEGACY exports are returned
  # @option opts [String] :user_id Retrieve exports initiated by the given user
  # @option opts [Integer] :page_size Number of Exports to return, maximum is 100
  # @option opts [String] :cursor Marks the position of the first element that should be returned
  # @option opts [String] :sorting the field to sort the results by
  # @option opts [String] :sort_direction the direction of the sorting
  # @return [ExportListResponse]
  describe 'get_exports test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
